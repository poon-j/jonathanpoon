{"ast":null,"code":"import _objectSpread from\"/Users/jonathanpoon/dev/jonathanpoon/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext}from'react';import{Button,Card,Badge,Col}from'react-bootstrap';import{ThemeContext}from'styled-components';import ReactMarkdown from'react-markdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles={badgeStyle:{paddingLeft:10,paddingRight:10,paddingTop:5,paddingBottom:5,margin:5},cardStyle:{borderRadius:10},cardTitleStyle:{fontSize:24,fontWeight:700},cardTextStyle:{textAlign:'left'},linkStyle:{textDecoration:'none',padding:10},buttonStyle:{margin:5}};var ProjectCard=function ProjectCard(props){var _project$links;var theme=useContext(ThemeContext);var parseBodyText=function parseBodyText(text){return/*#__PURE__*/_jsx(ReactMarkdown,{children:text});};var project=props.project;return/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{style:_objectSpread(_objectSpread({},styles.cardStyle),{},{backgroundColor:theme.cardBackground,borderColor:theme.cardBorderColor}),text:theme.bsSecondaryVariant,children:[/*#__PURE__*/_jsx(Card.Img,{variant:\"top\",src:project===null||project===void 0?void 0:project.image}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{style:styles.cardTitleStyle,children:project.title}),/*#__PURE__*/_jsx(Card.Text,{style:styles.cardTextStyle,children:parseBodyText(project.bodyText)})]}),/*#__PURE__*/_jsx(Card.Body,{children:project===null||project===void 0?void 0:(_project$links=project.links)===null||_project$links===void 0?void 0:_project$links.map(function(link){return/*#__PURE__*/_jsx(Button,{style:styles.buttonStyle,variant:'outline-'+theme.bsSecondaryVariant,onClick:function onClick(){return window.open(link.href,'_blank');},children:link.text},link.href);})}),project.tags&&/*#__PURE__*/_jsx(Card.Footer,{style:{backgroundColor:theme.cardFooterBackground},children:project.tags.map(function(tag){return/*#__PURE__*/_jsx(Badge,{pill:true,bg:theme.bsSecondaryVariant,text:theme.bsPrimaryVariant,style:styles.badgeStyle,children:tag},tag);})})]})});};export default ProjectCard;","map":{"version":3,"sources":["/Users/jonathanpoon/dev/jonathanpoon/src/components/projects/ProjectCard.jsx"],"names":["React","useContext","Button","Card","Badge","Col","ThemeContext","ReactMarkdown","styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","ProjectCard","props","theme","parseBodyText","text","project","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","image","title","bodyText","links","map","link","window","open","href","tags","cardFooterBackground","tag","bsPrimaryVariant"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.object),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n"]},"metadata":{},"sourceType":"module"}