{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpoon/dev/jonathanpoon/src/components/Experience.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  subtitleStyle: {\n    display: 'inline-block'\n  },\n  inlineChild: {\n    display: 'inline-block'\n  },\n  itemStyle: {\n    marginBottom: 10\n  }\n};\n\nfunction Experience(props) {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const {\n    header\n  } = props;\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET'\n    }).then(res => res.json()).then(res => setData(res.experiences)).catch(err => err);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content-container\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Timeline, {\n          lineColor: theme.timelineLineColor,\n          children: data.map(item => /*#__PURE__*/_jsxDEV(Fade, {\n            children: /*#__PURE__*/_jsxDEV(TimelineItem, {\n              dateText: item.dateText,\n              dateInnerStyle: {\n                background: theme.accentColor\n              },\n              style: styles.itemStyle,\n              bodyContainerStyle: {\n                color: theme.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"item-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.subtitleContainerStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: { ...styles.subtitleStyle,\n                    color: theme.accentColor\n                  },\n                  children: item.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 25\n                }, this), item.workType && /*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: styles.inlineChild,\n                  children: [\"\\xA0\\xB7\", ' ', item.workType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: styles.ulStyle,\n                children: item.workDescription.map(point => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                      children: point,\n                      components: {\n                        p: 'span'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 29\n                  }, this)]\n                }, point, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this)]\n            }, item.title + item.dateText, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(FallbackSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Experience, \"Op4WBp4iJl1znuwGbGh/YqwBYCk=\");\n\n_c = Experience;\nExperience.propTypes = {\n  header: PropTypes.string.isRequired\n};\nexport default Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"sources":["/Users/jonathanpoon/dev/jonathanpoon/src/components/Experience.jsx"],"names":["React","useEffect","useState","useContext","Timeline","TimelineItem","Container","ReactMarkdown","PropTypes","ThemeContext","Fade","Header","endpoints","FallbackSpinner","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","props","theme","header","data","setData","fetch","experiences","method","then","res","json","catch","err","timelineLineColor","map","item","dateText","background","accentColor","color","title","subtitle","workType","workDescription","point","p","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor={theme.timelineLineColor}\n              >\n                {data.map((item) => (\n                  <Fade>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={{ color: theme.color }}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        <h4 style={{ ...styles.subtitleStyle, color: theme.accentColor }}>\n                          {item.subtitle}\n                        </h4>\n                        {item.workType && (\n                        <h5 style={styles.inlineChild}>\n                    &nbsp;·\n                          {' '}\n                          {item.workType}\n                        </h5>\n                        )}\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n"]},"metadata":{},"sourceType":"module"}