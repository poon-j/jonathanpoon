{"ast":null,"code":"import React from'react';import DarkModeToggle from'react-dark-mode-toggle';import AppContext from'../AppContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ThemeToggler(props){var onClick=props.onClick;var handleOnChange=function handleOnChange(darkMode){darkMode.toggle();onClick();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AppContext.Consumer,{children:function children(values){return/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:8},children:/*#__PURE__*/_jsx(DarkModeToggle,{onChange:function onChange(){return handleOnChange(values.darkMode);},checked:values.darkMode.value,size:50})});}})});}ThemeToggler.defaultProps={onClick:function onClick(){}};export default ThemeToggler;","map":{"version":3,"sources":["/Users/jonathanpoon/dev/jonathanpoon/src/components/ThemeToggler.jsx"],"names":["React","DarkModeToggle","AppContext","ThemeToggler","props","onClick","handleOnChange","darkMode","toggle","values","marginBottom","value","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,C,gGAEA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAQC,CAAAA,OAAR,CAAoBD,KAApB,CAAQC,OAAR,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAc,CACnCA,QAAQ,CAACC,MAAT,GACAH,OAAO,GACR,CAHD,CAKA,mBACE,sCACE,KAAC,UAAD,CAAY,QAAZ,WACG,kBAACI,MAAD,qBACC,YAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,CAAhB,CAAZ,uBACE,KAAC,cAAD,EACE,QAAQ,CAAE,0BAAMJ,CAAAA,cAAc,CAACG,MAAM,CAACF,QAAR,CAApB,EADZ,CAEE,OAAO,CAAEE,MAAM,CAACF,QAAP,CAAgBI,KAF3B,CAGE,IAAI,CAAE,EAHR,EADF,EADD,EADH,EADF,EADF,CAeD,CAKDR,YAAY,CAACS,YAAb,CAA4B,CAC1BP,OAAO,CAAE,kBAAM,CAAE,CADS,CAA5B,CAIA,cAAeF,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport DarkModeToggle from 'react-dark-mode-toggle';\nimport PropTypes from 'prop-types';\nimport AppContext from '../AppContext';\n\nfunction ThemeToggler(props) {\n  const { onClick } = props;\n  const handleOnChange = (darkMode) => {\n    darkMode.toggle();\n    onClick();\n  };\n\n  return (\n    <>\n      <AppContext.Consumer>\n        {(values) => (\n          <div style={{ marginBottom: 8 }}>\n            <DarkModeToggle\n              onChange={() => handleOnChange(values.darkMode)}\n              checked={values.darkMode.value}\n              size={50}\n            />\n          </div>\n        )}\n      </AppContext.Consumer>\n    </>\n  );\n}\n\nThemeToggler.propTypes = {\n  onClick: PropTypes.func,\n};\nThemeToggler.defaultProps = {\n  onClick: () => {},\n};\n\nexport default ThemeToggler;\n"]},"metadata":{},"sourceType":"module"}