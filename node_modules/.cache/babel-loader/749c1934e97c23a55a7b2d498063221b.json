{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanpoon/dev/dev-portfolio/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport useDarkMode from 'use-dark-mode';\nimport AppContext from './AppContext';\nimport MainApp from './MainApp';\nimport GlobalStyles from './theme/GlobalStyles';\nimport { lightTheme, darkTheme } from './theme/themes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  window.matchMedia = null;\n  const darkMode = useDarkMode(true);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      darkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkMode.value ? darkTheme : lightTheme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n          children: /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TdsQsS0d3xw/utbVL1x4DuOKMeA=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jonathanpoon/dev/dev-portfolio/src/App.jsx"],"names":["React","BrowserRouter","ThemeProvider","useDarkMode","AppContext","MainApp","GlobalStyles","lightTheme","darkTheme","App","window","matchMedia","darkMode","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACbC,EAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA5B;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAES,MAAAA;AAAF,KAA5B;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA,QAAQ,CAACC,KAAT,GAAiBL,SAAjB,GAA6BD,UAAnD;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,aAAD;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhBQE,G;UAEUN,W;;;KAFVM,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport useDarkMode from 'use-dark-mode';\nimport AppContext from './AppContext';\nimport MainApp from './MainApp';\nimport GlobalStyles from './theme/GlobalStyles';\nimport { lightTheme, darkTheme } from './theme/themes';\n\nfunction App() {\n  window.matchMedia = null;\n  const darkMode = useDarkMode(true);\n\n  return (\n    <AppContext.Provider value={{ darkMode }}>\n      <ThemeProvider theme={darkMode.value ? darkTheme : lightTheme}>\n        <GlobalStyles />\n        <div className=\"App\">\n          <BrowserRouter>\n            <MainApp />\n          </BrowserRouter>\n        </div>\n      </ThemeProvider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}